
> music_shop_auth@1.0.0 test
> export FLAG=--exit && npm run test:run


> music_shop_auth@1.0.0 test:run
> npm run mysql:stop; npm run mysql:start && node test/db_check.js && mocha test/tests.js $FLAG; npm run mysql:stop


> music_shop_auth@1.0.0 mysql:stop
> docker container stop mysql-sandbox

mysql-sandbox

> music_shop_auth@1.0.0 mysql:start
> export FLAG=-d DB_NAME=music_shop_db && npm run mysql:run


> music_shop_auth@1.0.0 mysql:run
> docker run $FLAG --rm -p 3306:3306 -v $(pwd)/schema:/docker-entrypoint-initdb.d --name=mysql-sandbox -e MYSQL_ALLOW_EMPTY_PASSWORD=root -e MYSQL_DATABASE=$DB_NAME mysql:8 mysqld --authentication_policy=mysql_native_password

4e51ed6d1c8b2072f45e4368bebdc38cecbca390b6c3e627b7599d7f67274383
WAITING FOR MYSQL TO START
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC


  e-commerce site
    static files
      ✔ /style.css should serve style.css
      ✔ /index.js should serve index.js
      ✔ /images/acoustic.jpg should serve acoustic image
      ✔ /images/bass.jpg should serve bass image
      ✔ /images/picks.jpg should serve picks image
      ✔ /images/strat.jpg should serve strat image
      ✔ /images/ukulele.jpg should serve ukulele image
      ✔ /images/amp.jpg should serve amp image
      ✔ /images/cable.jpg should serve cable image
      ✔ /images/strap.jpg should serve strap image
      ✔ /images/strings.jpg should serve strings image
    e-commerce api
      authentication
        ✔ POST /api/user should create user and redirect to /login (78ms)
        ✔ POST /api/user should store password as hash (125ms)
        ✔ POST /api/user should return 400 if no login info is sent
        ✔ POST /api/user should return 400 if no username is sent
        ✔ POST /api/user should return 400 if no password is sent
        ✔ POST /api/login with correct username/pass should log user in and redirect to / (67ms)
        ✔ POST /api/login with wrong password return 400 (60ms)
        1) POST /api/login with wrong username return 400
        ✔ POST /api/login with no username/pass should return 400
        ✔ POST /api/login with no username return 400
        ✔ POST /api/login with no password return 400
        2) GET /api/logout should log user out and redirect to /
        3) POST /api/cart should redirect to /login if not logged in
        4) DELETE /api/cart should redirect to /login if not logged in
        5) PUT /api/cart/:id should redirect to /login if not logged in
        6) DELETE /api/cart/:id should redirect to /login if not logged in
        7) Logging in should allow access to cart page
        8) Logging out should NOT allow access to cart page
      cart
        9) POST /api/cart should add to cart
        10) POST /api/cart should return 404 if inventory item does not exist
        11) POST /api/cart should return 409 if item quantity is insufficient
        12) PUT /api/cart/:id should change cart quantity
        13) PUT /api/cart/:id should return 404 if cart item does not exist
        14) PUT /api/cart/:id should return 409 if inventory quantity insufficient
        15) DELETE /api/cart/:id should remove cart item
        16) DELETE /api/cart/:id should return 404 if cart item does not exist
        17) DELETE /api/cart/ should empty cart
    e-commerce front-end routes
      GET / - index/inventory page
        ✔ should return HTML for index page (107ms)
        ✔ should show login link instead of cart count if not logged in
        18) should show cart count if logged in
        ✔ should render names of items
        ✔ should render items for sale in link tags that lead to product page
        ✔ should render price of items
        ✔ should render images of items
      GET /product/:id - product pages
        GET /product/1 - product page for Stratocaster
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          19) should show cart count if logged in
          ✔ should show name (Stratocaster)
          ✔ should show price ($599.99)
          ✔ should show description (One of the most iconic electric guitars ever made.)
          ✔ should show image of product (images/strat.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=1
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/2 - product page for Mini Amp
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          20) should show cart count if logged in
          ✔ should show name (Mini Amp)
          ✔ should show price ($49.99)
          ✔ should show description (A small practice amp that shouldn't annoy roommates or neighbors.)
          ✔ should show image of product (images/amp.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=2
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/3 - product page for Bass Guitar
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          21) should show cart count if logged in
          ✔ should show name (Bass Guitar)
          ✔ should show price ($399.99)
          ✔ should show description (A four string electric bass guitar.)
          ✔ should show image of product (images/bass.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=3
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/4 - product page for Acoustic Guitar
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          22) should show cart count if logged in
          ✔ should show name (Acoustic Guitar)
          ✔ should show price ($799.99)
          ✔ should show description (Perfect for campfire sing-alongs.)
          ✔ should show image of product (images/acoustic.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=4
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/5 - product page for Ukulele
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          23) should show cart count if logged in
          ✔ should show name (Ukulele)
          ✔ should show price ($99.99)
          ✔ should show description (A four string tenor ukulele tuned GCEA.)
          ✔ should show image of product (images/ukulele.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=5
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/6 - product page for Strap
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          24) should show cart count if logged in
          ✔ should show name (Strap)
          ✔ should show price ($29.99)
          ✔ should show description (Woven instrument strap keeps your guitar or bass strapped to you to allow playing while standing.)
          ✔ should show image of product (images/strap.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=6
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/7 - product page for Assortment of Picks
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          25) should show cart count if logged in
          ✔ should show name (Assortment of Picks)
          ✔ should show price ($9.99)
          ✔ should show description (Picks for acoustic or electric players.)
          ✔ should show image of product (images/picks.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=7
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/8 - product page for Guitar Strings
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          26) should show cart count if logged in
          ✔ should show name (Guitar Strings)
          ✔ should show price ($12.99)
          ✔ should show description (High quality wound strings for your acoustic or electric guitar or bass.)
          ✔ should show image of product (images/strings.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=8
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/9 - product page for Instrument Cable
          ✔ should return HTML
          ✔ should show login link instead of cart count if not logged in
          27) should show cart count if logged in
          ✔ should show name (Instrument Cable)
          ✔ should show price ($19.99)
          ✔ should show description (A cable to connect an electric guitar or bass to an amplifier.)
          ✔ should show image of product (images/cable.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=9
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
      GET /cart - cart page
        28) should return HTML if logged in
        29) should render "Cart" heading
        30) should render "return to store" link
        31) should render "empty cart" button
        32) should render total
        Cart Item: Stratocaster
          33) should render name
          34) should render image
          35) should render price
          36) should render quantity
          37) should render calculatedPrice (quantity * price)
          38) should render remove btn
        Cart Item: Strap
          39) should render name
          40) should render image
          41) should render price
          42) should render quantity
          43) should render calculatedPrice (quantity * price)
          44) should render remove btn
        Cart Item: Assortment of Picks
          45) should render name
          46) should render image
          47) should render price
          48) should render quantity
          49) should render calculatedPrice (quantity * price)
          50) should render remove btn
        Cart Item: Instrument Cable
          51) should render name
          52) should render image
          53) should render price
          54) should render quantity
          55) should render calculatedPrice (quantity * price)
          56) should render remove btn
        Cart Item: Mini Amp
          57) should render name
          58) should render image
          59) should render price
          60) should render quantity
          61) should render calculatedPrice (quantity * price)
          62) should render remove btn
      GET /login
        ✔ should return HTML for login page (40ms)
      GET /create-account
        ✔ should return HTML for sign up page


  110 passing (2m)
  62 failing

  1) e-commerce site
       e-commerce api
         authentication
           POST /api/login with wrong username return 400:

      AssertionError: expected 404 to equal 400
      + expected - actual

      -404
      +400
      
      at Context.<anonymous> (test/tests.js:245:31)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  2) e-commerce site
       e-commerce api
         authentication
           GET /api/logout should log user out and redirect to /:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  3) e-commerce site
       e-commerce api
         authentication
           POST /api/cart should redirect to /login if not logged in:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  4) e-commerce site
       e-commerce api
         authentication
           DELETE /api/cart should redirect to /login if not logged in:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  5) e-commerce site
       e-commerce api
         authentication
           PUT /api/cart/:id should redirect to /login if not logged in:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  6) e-commerce site
       e-commerce api
         authentication
           DELETE /api/cart/:id should redirect to /login if not logged in:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  7) e-commerce site
       e-commerce api
         authentication
           Logging in should allow access to cart page:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  8) e-commerce site
       e-commerce api
         authentication
           Logging out should NOT allow access to cart page:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  9) e-commerce site
       e-commerce api
         cart
           POST /api/cart should add to cart:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  10) e-commerce site
       e-commerce api
         cart
           POST /api/cart should return 404 if inventory item does not exist:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  11) e-commerce site
       e-commerce api
         cart
           POST /api/cart should return 409 if item quantity is insufficient:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  12) e-commerce site
       e-commerce api
         cart
           PUT /api/cart/:id should change cart quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  13) e-commerce site
       e-commerce api
         cart
           PUT /api/cart/:id should return 404 if cart item does not exist:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  14) e-commerce site
       e-commerce api
         cart
           PUT /api/cart/:id should return 409 if inventory quantity insufficient:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  15) e-commerce site
       e-commerce api
         cart
           DELETE /api/cart/:id should remove cart item:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  16) e-commerce site
       e-commerce api
         cart
           DELETE /api/cart/:id should return 404 if cart item does not exist:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  17) e-commerce site
       e-commerce api
         cart
           DELETE /api/cart/ should empty cart:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  18) e-commerce site
       e-commerce front-end routes
         GET / - index/inventory page
           should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<h2>[39m
        [0mItems for Sale[0m
      [36m</h2>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"saleItems"[39m
      [36m>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/1"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Stratocaster"[39m
              [33msrc[39m=[32m"images/strat.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mOne of the most iconic electric guitars ever made.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mStratocaster[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$599.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/2"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Mini Amp"[39m
              [33msrc[39m=[32m"images/amp.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mA small practice amp that shouldn't annoy roommates or neighbors.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mMini Amp[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$49.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/3"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Bass Guitar"[39m
              [33msrc[39m=[32m"images/bass.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mA four string electric bass guitar.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mBass Guitar[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$399.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/4"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Acoustic Guitar"[39m
              [33msrc[39m=[32m"images/acoustic.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mPerfect for campfire sing-alongs.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mAcoustic Guitar[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$799.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/5"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Ukulele"[39m
              [33msrc[39m=[32m"images/ukulele.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mA four string tenor ukulele tuned GCEA.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mUkulele[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$99.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/6"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Strap"[39m
              [33msrc[39m=[32m"images/strap.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mWoven instrument strap keeps your guitar or bass strapped to you to allow playing while standing.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mStrap[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$29.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/7"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Assortment of Picks"[39m
              [33msrc[39m=[32m"images/picks.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mPicks for acoustic or electric players.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mAssortment of Picks[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$9.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/8"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Guitar Strings"[39m
              [33msrc[39m=[32m"images/strings.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mHigh quality wound strings for your acoustic or electric guitar or bass.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mGuitar Strings[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$12.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mclass[39m=[32m"sale-item"[39m
          [33mhref[39m=[32m"/product/9"[39m
        [36m>[39m
          [0m
        [0m
          [36m<div[39m
            [33mclass[39m=[32m"item-img-container"[39m
          [36m>[39m
            [0m
          [0m
            [36m<img[39m
              [33malt[39m=[32m"Instrument Cable"[39m
              [33msrc[39m=[32m"images/cable.jpg"[39m
            [36m/>[39m
            [0m
          [0m
            [36m<p>[39m
              [0mA cable to connect an electric guitar or bass to an amplifier.[0m
            [36m</p>[39m
            [0m
        [0m
          [36m</div>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mInstrument Cable[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$19.99[0m
          [36m</p>[39m
          [0m
      [0m
        [36m</a>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:481:22)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  19) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/1 - product page for Stratocaster
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/strat.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=1"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mStratocaster[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mOne of the most iconic electric guitars ever made.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$599.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"3"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  20) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/2 - product page for Mini Amp
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/amp.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=2"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mMini Amp[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mA small practice amp that shouldn't annoy roommates or neighbors.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$49.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"10"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  21) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/3 - product page for Bass Guitar
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/bass.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=3"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mBass Guitar[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mA four string electric bass guitar.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$399.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"10"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  22) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/4 - product page for Acoustic Guitar
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/acoustic.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=4"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mAcoustic Guitar[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mPerfect for campfire sing-alongs.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$799.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"4"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  23) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/5 - product page for Ukulele
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/ukulele.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=5"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mUkulele[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mA four string tenor ukulele tuned GCEA.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$99.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"15"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  24) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/6 - product page for Strap
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/strap.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=6"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mStrap[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mWoven instrument strap keeps your guitar or bass strapped to you to allow playing while standing.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$29.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"20"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  25) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/7 - product page for Assortment of Picks
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/picks.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=7"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mAssortment of Picks[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mPicks for acoustic or electric players.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$9.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"50"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  26) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/8 - product page for Guitar Strings
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/strings.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=8"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mGuitar Strings[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mHigh quality wound strings for your acoustic or electric guitar or bass.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$12.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"20"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  27) e-commerce site
       e-commerce front-end routes
         GET /product/:id - product pages
           GET /product/9 - product page for Instrument Cable
             should show cart count if logged in:
     TestingLibraryElementError: Unable to find an element with the text: /cart\s+?\(7\)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<html[39m
  [33mlang[39m=[32m"en"[39m
[36m>[39m
  [36m<head>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcharset[39m=[32m"UTF-8"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"IE=edge"[39m
      [33mhttp-equiv[39m=[32m"X-UA-Compatible"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<meta[39m
      [33mcontent[39m=[32m"width=device-width, initial-scale=1.0"[39m
      [33mname[39m=[32m"viewport"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<link[39m
      [33mhref[39m=[32m"/style.css"[39m
      [33mrel[39m=[32m"stylesheet"[39m
    [36m/>[39m
    [0m
  [0m
    [36m<title>[39m
      [0mMusic Store[0m
    [36m</title>[39m
    [0m
[0m
  [36m</head>[39m
  [0m
[0m
  [36m<body>[39m
    [0m
  [0m
    [36m<header>[39m
      [0m
  [0m
      [36m<div[39m
        [33mclass[39m=[32m"header-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<a[39m
          [33mhref[39m=[32m"/"[39m
        [36m>[39m
          [0m
      [0m
          [36m<h1[39m
            [33mclass[39m=[32m"logo"[39m
          [36m>[39m
            [0mMusic Shop🎸[0m
          [36m</h1>[39m
          [0m
    [0m
        [36m</a>[39m
        [0m
      [0m
        [36m<a[39m
          [33mhref[39m=[32m"/login"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</a>[39m
        [0m
  [0m
      [36m</div>[39m
      [0m
[0m
    [36m</header>[39m
    [36m<main>[39m
      [0m
  [0m
      [36m<section[39m
        [33mid[39m=[32m"product-container"[39m
      [36m>[39m
        [0m
    [0m
        [36m<img[39m
          [33malt[39m=[32m"${name}"[39m
          [33msrc[39m=[32m"/images/cable.jpg"[39m
        [36m/>[39m
        [0m
      [0m
        [36m<form[39m
          [33maction[39m=[32m"/api/cart?inventoryId=9"[39m
          [33mmethod[39m=[32m"POST"[39m
        [36m>[39m
          [0m
        [0m
          [36m<h2>[39m
            [0mInstrument Cable[0m
          [36m</h2>[39m
          [0m
        [0m
          [36m<p>[39m
            [0mA cable to connect an electric guitar or bass to an amplifier.[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<p>[39m
            [0m$19.99[0m
          [36m</p>[39m
          [0m
        [0m
          [36m<label[39m
            [33mfor[39m=[32m"quantity-input"[39m
          [36m>[39m
            [0m
          Quantity
          [0m
            [36m<input[39m
              [33mid[39m=[32m"quantity-input"[39m
              [33mmax[39m=[32m"15"[39m
              [33mmin[39m=[32m"1"[39m
              [33mname[39m=[32m"quantity"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m"1"[39m
            [36m/>[39m
            [0m
        [0m
          [36m</label>[39m
          [0m
        [0m
          [36m<button>[39m
            [0mAdd to Cart[0m
          [36m</button>[39m
          [0m
      [0m
        [36m</form>[39m
        [0m
  [0m
      [36m</section>[39m
      [0m
  [0m
      [36m<a[39m
        [33mhref[39m=[32m"/"[39m
        [33mid[39m=[32m"returnToStore"[39m
      [36m>[39m
        [0mReturn to Store Page[0m
      [36m</a>[39m
      [0m
[0m
    [36m</main>[39m
    [0m
[0m
    [36m<footer>[39m
      [0m
  [0m
      [36m<p>[39m
        [0m© Music Shop[0m
      [36m</p>[39m
      [0m
[0m
    [36m</footer>[39m
    [0m
  [0m
    [0m

[0m
  [36m</body>[39m
[36m</html>[39m
      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:581:26)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  28) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           should return HTML if logged in:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  29) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           should render "Cart" heading:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  30) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           should render "return to store" link:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  31) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           should render "empty cart" button:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  32) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           should render total:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  33) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render name:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  34) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render image:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  35) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render price:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  36) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  37) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render calculatedPrice (quantity * price):
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  38) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render remove btn:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  39) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render name:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  40) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render image:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  41) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render price:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  42) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  43) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render calculatedPrice (quantity * price):
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  44) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render remove btn:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  45) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render name:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  46) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render image:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  47) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render price:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  48) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  49) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render calculatedPrice (quantity * price):
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  50) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render remove btn:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  51) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render name:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  52) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render image:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  53) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render price:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  54) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  55) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render calculatedPrice (quantity * price):
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  56) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render remove btn:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  57) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render name:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  58) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render image:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  59) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render price:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  60) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render quantity:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  61) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render calculatedPrice (quantity * price):
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)

  62) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render remove btn:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/dominickbirge/Documents/mmc6278/assignment7/mmc6278-7-7-birge-dominick/test/tests.js)
      at listOnTimeout (node:internal/timers:564:17)
      at process.processTimers (node:internal/timers:507:7)




> music_shop_auth@1.0.0 mysql:stop
> docker container stop mysql-sandbox

mysql-sandbox
